package com.ryanworks.fishery.client.ui.outbound;

import com.ryanworks.fishery.shared.bean.SalesLineBean;
import com.ryanworks.fishery.shared.swing.listener.JTextFieldFocusListener;
import com.ryanworks.fishery.shared.util.MyLogger;
import javax.swing.JOptionPane;

public class OutboundSalesLineDialog 
    extends javax.swing.JDialog 
{
    private final OutboundSalesPanel parentPanel;
    private final SalesLineBean lineObj;    

    public OutboundSalesLineDialog(java.awt.Frame parent, boolean modal, OutboundSalesPanel parentPanel, SalesLineBean lineBean) 
    {
        super(parent, modal);
        this.parentPanel = parentPanel;
        
        if (lineBean == null)
            this.lineObj = new SalesLineBean();
        else
            this.lineObj = lineBean;
        
        initComponents();
        myInit();
    }
    
    private void myInit()
    {
        fillForm();
        
        this.jTextFieldWeight.addFocusListener( new JTextFieldFocusListener() );
        this.jTextFieldAddWeight.addFocusListener( new JTextFieldFocusListener() );
        
        if(lineObj.getSupplierId() != null && lineObj.getSupplierId().length() > 0)
        {
            //this.jTextFieldWeight.setEditable( false);
            //this.jTextFieldAddWeight.setEditable( false);
        }
        else
        {
            this.jTextFieldWeight.requestFocus();
            this.jTextFieldWeight.selectAll();
        }
    }
    
    private void fillForm()
    {
        this.jTextFieldItemName.setText( lineObj.getItemNewName() );
        this.jTextFieldWeight.setText( String.valueOf(lineObj.getWeight()) );
        this.jTextFieldAddWeight.setText( String.valueOf(lineObj.getAddWeight()) );
    }
    
    private boolean fillBean()
    {
        try {
            this.lineObj.setItemNewName( this.jTextFieldItemName.getText().trim() );
            this.lineObj.setWeight( Double.parseDouble( this.jTextFieldWeight.getText().trim() ) );
        }
        catch (NumberFormatException e) {
            MyLogger.logError(getClass(), e.getMessage());
            JOptionPane.showMessageDialog(
                    this, 
                    "输入错误", 
                    "您输入的重量有错误。", 
                    JOptionPane.ERROR_MESSAGE);
            this.jTextFieldWeight.requestFocus();
            this.jTextFieldWeight.selectAll();
            
            return false;
        }
        
        
        try {
            if (this.jTextFieldAddWeight.getText().trim().length()==0)
                this.lineObj.setAddWeight(0.0d);
            else
                this.lineObj.setAddWeight( Double.parseDouble( this.jTextFieldAddWeight.getText().trim() ) );
        }
        catch (NumberFormatException e) {
            MyLogger.logError(getClass(), e.getMessage());
            JOptionPane.showMessageDialog(
                    this, 
                    "输入错误", 
                    "您输入的加重量有错误。", 
                    JOptionPane.ERROR_MESSAGE);
            this.jTextFieldAddWeight.requestFocus();
            this.jTextFieldAddWeight.selectAll();
            
            return false;
        }
                
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCenter = new javax.swing.JPanel();
        jPanelSeafoodType = new javax.swing.JPanel();
        jLabelSeafoodType = new javax.swing.JLabel();
        jPanelSeafoodTypeButtons = new javax.swing.JPanel();
        jButtonSeafoodTypeBig = new javax.swing.JButton();
        jButtonSeafoodTypeSmall = new javax.swing.JButton();
        jButtonSeafoodTypeMiddle = new javax.swing.JButton();
        jButtonSeafoodTypeTiny = new javax.swing.JButton();
        jButtonSeafoodTypeShang = new javax.swing.JButton();
        jButtonSeafoodTypeFarm = new javax.swing.JButton();
        jButtonSeafoodTypeMeat = new javax.swing.JButton();
        jButtonSeafoodTypeHead = new javax.swing.JButton();
        jButtonSeafoodTypeSpecial = new javax.swing.JButton();
        jButtonSeafoodTypeCold = new javax.swing.JButton();
        jTextFieldItemName = new javax.swing.JTextField();
        jPanelWeight = new javax.swing.JPanel();
        jLabelWeight = new javax.swing.JLabel();
        jTextFieldWeight = new javax.swing.JTextField();
        jPanelWeightButtons = new javax.swing.JPanel();
        jPanelAddWeight = new javax.swing.JPanel();
        jLabelAddWeight = new javax.swing.JLabel();
        jTextFieldAddWeight = new javax.swing.JTextField();
        jPanelAddWeightButtons = new javax.swing.JPanel();
        jPanelAction = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(480, 560));

        jPanelCenter.setLayout(new java.awt.GridLayout(3, 1, 0, 3));

        jPanelSeafoodType.setLayout(new java.awt.BorderLayout(3, 3));

        jLabelSeafoodType.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jLabelSeafoodType.setText("海鲜类别");
        jPanelSeafoodType.add(jLabelSeafoodType, java.awt.BorderLayout.PAGE_START);

        jPanelSeafoodTypeButtons.setPreferredSize(new java.awt.Dimension(160, 132));
        jPanelSeafoodTypeButtons.setLayout(new java.awt.GridLayout(5, 2, 3, 3));

        jButtonSeafoodTypeBig.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeBig.setText("大");
        jButtonSeafoodTypeBig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeBigActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeBig);

        jButtonSeafoodTypeSmall.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeSmall.setText("小");
        jButtonSeafoodTypeSmall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeSmallActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeSmall);

        jButtonSeafoodTypeMiddle.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeMiddle.setText("中");
        jButtonSeafoodTypeMiddle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeMiddleActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeMiddle);

        jButtonSeafoodTypeTiny.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeTiny.setText("仔");
        jButtonSeafoodTypeTiny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeTinyActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeTiny);

        jButtonSeafoodTypeShang.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeShang.setText("上");
        jButtonSeafoodTypeShang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeShangActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeShang);

        jButtonSeafoodTypeFarm.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeFarm.setText("养");
        jButtonSeafoodTypeFarm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeFarmActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeFarm);

        jButtonSeafoodTypeMeat.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeMeat.setText("肉");
        jButtonSeafoodTypeMeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeMeatActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeMeat);

        jButtonSeafoodTypeHead.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeHead.setText("头");
        jButtonSeafoodTypeHead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeHeadActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeHead);

        jButtonSeafoodTypeSpecial.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeSpecial.setText("特");
        jButtonSeafoodTypeSpecial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeSpecialActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeSpecial);

        jButtonSeafoodTypeCold.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jButtonSeafoodTypeCold.setText("冻");
        jButtonSeafoodTypeCold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeafoodTypeColdActionPerformed(evt);
            }
        });
        jPanelSeafoodTypeButtons.add(jButtonSeafoodTypeCold);

        jPanelSeafoodType.add(jPanelSeafoodTypeButtons, java.awt.BorderLayout.LINE_END);

        jTextFieldItemName.setFont(new java.awt.Font("KaiTi", 1, 48)); // NOI18N
        jTextFieldItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldItemNameKeyReleased(evt);
            }
        });
        jPanelSeafoodType.add(jTextFieldItemName, java.awt.BorderLayout.CENTER);

        jPanelCenter.add(jPanelSeafoodType);

        jPanelWeight.setLayout(new java.awt.BorderLayout(3, 3));

        jLabelWeight.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jLabelWeight.setText("重量");
        jPanelWeight.add(jLabelWeight, java.awt.BorderLayout.PAGE_START);

        jTextFieldWeight.setFont(new java.awt.Font("KaiTi", 1, 48)); // NOI18N
        jTextFieldWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldWeightActionPerformed(evt);
            }
        });
        jPanelWeight.add(jTextFieldWeight, java.awt.BorderLayout.CENTER);

        jPanelWeightButtons.setPreferredSize(new java.awt.Dimension(160, 125));

        javax.swing.GroupLayout jPanelWeightButtonsLayout = new javax.swing.GroupLayout(jPanelWeightButtons);
        jPanelWeightButtons.setLayout(jPanelWeightButtonsLayout);
        jPanelWeightButtonsLayout.setHorizontalGroup(
            jPanelWeightButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );
        jPanelWeightButtonsLayout.setVerticalGroup(
            jPanelWeightButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );

        jPanelWeight.add(jPanelWeightButtons, java.awt.BorderLayout.LINE_END);

        jPanelCenter.add(jPanelWeight);

        jPanelAddWeight.setLayout(new java.awt.BorderLayout(3, 3));

        jLabelAddWeight.setFont(new java.awt.Font("KaiTi", 1, 18)); // NOI18N
        jLabelAddWeight.setText("加重量");
        jPanelAddWeight.add(jLabelAddWeight, java.awt.BorderLayout.PAGE_START);

        jTextFieldAddWeight.setFont(new java.awt.Font("KaiTi", 1, 48)); // NOI18N
        jTextFieldAddWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAddWeightActionPerformed(evt);
            }
        });
        jPanelAddWeight.add(jTextFieldAddWeight, java.awt.BorderLayout.CENTER);

        jPanelAddWeightButtons.setPreferredSize(new java.awt.Dimension(160, 125));

        javax.swing.GroupLayout jPanelAddWeightButtonsLayout = new javax.swing.GroupLayout(jPanelAddWeightButtons);
        jPanelAddWeightButtons.setLayout(jPanelAddWeightButtonsLayout);
        jPanelAddWeightButtonsLayout.setHorizontalGroup(
            jPanelAddWeightButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );
        jPanelAddWeightButtonsLayout.setVerticalGroup(
            jPanelAddWeightButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );

        jPanelAddWeight.add(jPanelAddWeightButtons, java.awt.BorderLayout.LINE_END);

        jPanelCenter.add(jPanelAddWeight);

        getContentPane().add(jPanelCenter, java.awt.BorderLayout.CENTER);

        jButtonSave.setFont(new java.awt.Font("KaiTi", 1, 24)); // NOI18N
        jButtonSave.setText("储存");
        jButtonSave.setPreferredSize(new java.awt.Dimension(120, 37));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jButtonSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonSaveKeyReleased(evt);
            }
        });
        jPanelAction.add(jButtonSave);

        jButtonDelete.setFont(new java.awt.Font("KaiTi", 1, 24)); // NOI18N
        jButtonDelete.setText("删除");
        jButtonDelete.setPreferredSize(new java.awt.Dimension(120, 37));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanelAction.add(jButtonDelete);

        jButtonCancel.setFont(new java.awt.Font("KaiTi", 1, 24)); // NOI18N
        jButtonCancel.setText("取消");
        jButtonCancel.setPreferredSize(new java.awt.Dimension(120, 37));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        jPanelAction.add(jButtonCancel);

        getContentPane().add(jPanelAction, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSeafoodTypeBigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeBigActionPerformed
        this.lineObj.setItemNewName(this.jButtonSeafoodTypeBig.getText() + jTextFieldItemName.getText().trim());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeBigActionPerformed

    private void jButtonSeafoodTypeSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeSmallActionPerformed
        this.lineObj.setItemNewName(this.jButtonSeafoodTypeSmall.getText() + jTextFieldItemName.getText().trim());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeSmallActionPerformed

    private void jButtonSeafoodTypeMiddleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeMiddleActionPerformed
        this.lineObj.setItemNewName(this.jButtonSeafoodTypeMiddle.getText() + jTextFieldItemName.getText().trim());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeMiddleActionPerformed

    private void jButtonSeafoodTypeTinyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeTinyActionPerformed
        this.lineObj.setItemNewName(jTextFieldItemName.getText().trim() + this.jButtonSeafoodTypeTiny.getText());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeTinyActionPerformed

    private void jButtonSeafoodTypeShangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeShangActionPerformed
        this.lineObj.setItemNewName(this.jButtonSeafoodTypeShang.getText() + jTextFieldItemName.getText().trim());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeShangActionPerformed

    private void jTextFieldWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWeightActionPerformed
        this.jTextFieldAddWeight.requestFocus();
    }//GEN-LAST:event_jTextFieldWeightActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        SaveThread thread = new SaveThread("Save to DB Thread");
        thread.start();
        
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    /**
     * Thread to save transaction asyn.
     */
    private class SaveThread extends Thread 
    {
        public SaveThread(String name) 
        {
            super(name);
        }
        
        @Override
        public void run()
        {     
            if (fillBean()==false)
                return;
        
            OutboundSalesLineDialog.this.parentPanel.salesLineDialogClosed(
                OutboundSalesLineDialog.this.lineObj);        
        }
    }
    
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int flag = JOptionPane.showConfirmDialog(this, "您确定要删除这项交易资料吗？", "确认删除", JOptionPane.YES_NO_OPTION);
        if (flag == JOptionPane.NO_OPTION)
            return;
                
        fillBean();
        this.parentPanel.deleteSalesLine(this.lineObj);
                    
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTextFieldAddWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAddWeightActionPerformed
        this.jButtonSave.requestFocus();
    }//GEN-LAST:event_jTextFieldAddWeightActionPerformed

    private void jButtonSeafoodTypeFarmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeFarmActionPerformed
        this.lineObj.setItemNewName(this.jButtonSeafoodTypeFarm.getText() + jTextFieldItemName.getText().trim());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeFarmActionPerformed

    private void jButtonSeafoodTypeMeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeMeatActionPerformed
        this.lineObj.setItemNewName(jTextFieldItemName.getText().trim() + this.jButtonSeafoodTypeMeat.getText());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeMeatActionPerformed

    private void jButtonSaveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonSaveKeyReleased
        this.jButtonSave.doClick();
    }//GEN-LAST:event_jButtonSaveKeyReleased

    private void jTextFieldItemNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldItemNameKeyReleased
        System.out.println("Key Released: " + jTextFieldItemName.getText());
    }//GEN-LAST:event_jTextFieldItemNameKeyReleased

    private void jButtonSeafoodTypeHeadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeHeadActionPerformed
        this.lineObj.setItemNewName(jTextFieldItemName.getText().trim() + this.jButtonSeafoodTypeHead.getText());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeHeadActionPerformed

    private void jButtonSeafoodTypeSpecialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeSpecialActionPerformed
        this.lineObj.setItemNewName(this.jButtonSeafoodTypeSpecial.getText() + jTextFieldItemName.getText().trim());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeSpecialActionPerformed

    private void jButtonSeafoodTypeColdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeafoodTypeColdActionPerformed
        this.lineObj.setItemNewName(this.jButtonSeafoodTypeCold.getText() + jTextFieldItemName.getText().trim());
        this.jTextFieldItemName.setText( this.lineObj.getItemNewName() );
        
        this.jTextFieldWeight.requestFocus();
        this.jTextFieldWeight.selectAll();
    }//GEN-LAST:event_jButtonSeafoodTypeColdActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSeafoodTypeBig;
    private javax.swing.JButton jButtonSeafoodTypeCold;
    private javax.swing.JButton jButtonSeafoodTypeFarm;
    private javax.swing.JButton jButtonSeafoodTypeHead;
    private javax.swing.JButton jButtonSeafoodTypeMeat;
    private javax.swing.JButton jButtonSeafoodTypeMiddle;
    private javax.swing.JButton jButtonSeafoodTypeShang;
    private javax.swing.JButton jButtonSeafoodTypeSmall;
    private javax.swing.JButton jButtonSeafoodTypeSpecial;
    private javax.swing.JButton jButtonSeafoodTypeTiny;
    private javax.swing.JLabel jLabelAddWeight;
    private javax.swing.JLabel jLabelSeafoodType;
    private javax.swing.JLabel jLabelWeight;
    private javax.swing.JPanel jPanelAction;
    private javax.swing.JPanel jPanelAddWeight;
    private javax.swing.JPanel jPanelAddWeightButtons;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelSeafoodType;
    private javax.swing.JPanel jPanelSeafoodTypeButtons;
    private javax.swing.JPanel jPanelWeight;
    private javax.swing.JPanel jPanelWeightButtons;
    private javax.swing.JTextField jTextFieldAddWeight;
    private javax.swing.JTextField jTextFieldItemName;
    private javax.swing.JTextField jTextFieldWeight;
    // End of variables declaration//GEN-END:variables
}
